import * as ts from "typescript";
import { writeFile } from "fs/promises";
import type { ISchema } from "./types/jsonschema/ISchema";
import type { BaseSchemaParser } from "./parsers/BaseSchemaParser";

export class Generator {
	constructor(
		private readonly printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed })
	) {}
	
	public generate(
		output: string,
		schema: ISchema,
		parser: BaseSchemaParser<any>
	) {
		let outputSourceFile = ts.createSourceFile(
			output, 
			"",
			ts.ScriptTarget.ES2022,
			false,
			ts.ScriptKind.TS
		);

		let parsedSchema = parser.parse(schema);
		let result = this.printer.printList(
			ts.ListFormat.MultiLine, 
			parsedSchema,
			outputSourceFile
		);
		
		return writeFile(
			output, 
			this.createReference() + 
			"/* eslint-disable */\n" +
			result
		);
	}

	private createReference() {
		return (
			"/*\n" +
			"	Generated by vk-api-schema-parser, https://github.com/Ripretention/vk-api-schema-parser\n" +
			"*/\n"
		);
	}
}
